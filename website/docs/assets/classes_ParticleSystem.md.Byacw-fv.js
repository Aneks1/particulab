import{_ as a,c as t,ae as r,o as s}from"./chunks/framework.BafQBjza.js";const m=JSON.parse('{"title":"class ParticleSystem","description":"","frontmatter":{},"headers":[],"relativePath":"classes/ParticleSystem.md","filePath":"classes/ParticleSystem.md"}'),o={name:"classes/ParticleSystem.md"};function l(i,e,n,c,h,d){return s(),t("div",null,e[0]||(e[0]=[r('<h1 id="class-particlesystem" tabindex="-1"><span class="keyword"><code>class</code></span> ParticleSystem <a class="header-anchor" href="#class-particlesystem" aria-label="Permalink to &quot;&lt;span class=&quot;keyword&quot;&gt;`class`&lt;/span&gt; ParticleSystem&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ParticleSystem</span></span></code></pre></div><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h4 id="constructor-canvas-htmlcanvaselement-options-particlesystemoptions" tabindex="-1">constructor(canvas: <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement" target="_blank" rel="noreferrer">HTMLCanvasElement</a>, options: <a href="./../interfaces/ParticleOptions.html">ParticleSystemOptions</a>) <a class="header-anchor" href="#constructor-canvas-htmlcanvaselement-options-particlesystemoptions" aria-label="Permalink to &quot;constructor(canvas: [HTMLCanvasElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement), options: [ParticleSystemOptions](../interfaces/ParticleOptions))&quot;">​</a></h4><hr><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h4 id="amount-number" tabindex="-1"><code>amount</code> : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number" target="_blank" rel="noreferrer">number</a> <a class="header-anchor" href="#amount-number" aria-label="Permalink to &quot;``amount`` : [number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number)&quot;">​</a></h4><p>The number of particles rendered by the system.</p><hr><h4 id="colors-rgba-hex" tabindex="-1"><code>colors</code> : (RGBA | HEX)[] <a class="header-anchor" href="#colors-rgba-hex" aria-label="Permalink to &quot;``colors`` : (RGBA | HEX)[]&quot;">​</a></h4><hr><h4 id="life-interval" tabindex="-1"><code>life</code> : <a href="./../types/Interval.html">Interval</a> <a class="header-anchor" href="#life-interval" aria-label="Permalink to &quot;``life`` : [Interval](../types/Interval)&quot;">​</a></h4><hr><h4 id="opacity-interval" tabindex="-1"><code>opacity</code> : <a href="./../types/Interval.html">Interval</a> <a class="header-anchor" href="#opacity-interval" aria-label="Permalink to &quot;``opacity`` : [Interval](../types/Interval)&quot;">​</a></h4><hr><h4 id="particles-map-string-particle-gt" tabindex="-1"><code>particles</code> : <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map" target="_blank" rel="noreferrer">Map</a>&lt;<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String" target="_blank" rel="noreferrer">string</a>, Particle&gt; <a class="header-anchor" href="#particles-map-string-particle-gt" aria-label="Permalink to &quot;``particles`` : [Map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map)&amp;lt;[string](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String), Particle&amp;gt;&quot;">​</a></h4><hr><h4 id="size-interval" tabindex="-1"><code>size</code> : <a href="./../types/Interval.html">Interval</a> <a class="header-anchor" href="#size-interval" aria-label="Permalink to &quot;``size`` : [Interval](../types/Interval)&quot;">​</a></h4><hr><h4 id="shapes-shape" tabindex="-1"><code>shapes</code> : <a href="./../types/Shape.html">Shape</a>[] <a class="header-anchor" href="#shapes-shape" aria-label="Permalink to &quot;``shapes`` : [Shape](../types/Shape)[]&quot;">​</a></h4><hr><h4 id="speed-vectorinterval" tabindex="-1"><code>speed</code> : <a href="./../types/VectorInterval.html">VectorInterval</a> <a class="header-anchor" href="#speed-vectorinterval" aria-label="Permalink to &quot;``speed`` : [VectorInterval](../types/VectorInterval)&quot;">​</a></h4><hr><h4 id="fadein-fadeoptions" tabindex="-1"><code>fadeIn?</code> : <a href="./../interfaces/FadeOptions.html">FadeOptions</a> <a class="header-anchor" href="#fadein-fadeoptions" aria-label="Permalink to &quot;``fadeIn?`` : [FadeOptions](../interfaces/FadeOptions)&quot;">​</a></h4><hr><h4 id="fadeout-fadeoptions" tabindex="-1"><code>fadeOut?</code> : <a href="./../interfaces/FadeOptions.html">FadeOptions</a> <a class="header-anchor" href="#fadeout-fadeoptions" aria-label="Permalink to &quot;``fadeOut?`` : [FadeOptions](../interfaces/FadeOptions)&quot;">​</a></h4><hr><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h4 id="init-void" tabindex="-1"><code>init</code>() : void <a class="header-anchor" href="#init-void" aria-label="Permalink to &quot;``init``() : void&quot;">​</a></h4><p>Starts the particle system rendering process.</p><hr><h4 id="stop-void" tabindex="-1"><code>stop</code>() : void <a class="header-anchor" href="#stop-void" aria-label="Permalink to &quot;``stop``() : void&quot;">​</a></h4><p>Stops the particle system update process. Previously rendered particles will still show on screen.</p><hr><h4 id="clear-void" tabindex="-1"><code>clear</code>() : void <a class="header-anchor" href="#clear-void" aria-label="Permalink to &quot;``clear``() : void&quot;">​</a></h4><p>Removes all particles on screen.</p>',36)]))}const b=a(o,[["render",l]]);export{m as __pageData,b as default};
